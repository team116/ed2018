#ifndef OI_H
#define OI_H

#include "WPILib.h"

class OI {
private:
	
	std::shared_ptr<frc::Joystick> joystick1;
	std::shared_ptr<frc::JoystickButton> hold;
	std::shared_ptr<frc::JoystickButton> scaleNeutral;
	std::shared_ptr<frc::JoystickButton> switchTop;
	std::shared_ptr<frc::JoystickButton> scaleBottom;
	std::shared_ptr<frc::JoystickButton> joy_left_con_belt;
	std::shared_ptr<frc::JoystickButton> rung;
	std::shared_ptr<frc::JoystickButton> closePistonButton;
	std::shared_ptr<frc::JoystickButton> openPistonButton;
	std::shared_ptr<frc::JoystickButton> scaleTop;
	std::shared_ptr<frc::Joystick> joy_con_belt_left;
	std::shared_ptr<frc::Joystick> joy_lift;
	std::shared_ptr<frc::Joystick> joy_climber;
	std::shared_ptr<frc::Joystick> joy_right;
	std::shared_ptr<frc::Joystick> joy_left;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	OI();

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES

	std::shared_ptr<frc::Joystick> getjoy_left();
	std::shared_ptr<frc::Joystick> getjoy_right();
	std::shared_ptr<frc::Joystick> getjoy_climber();
	std::shared_ptr<frc::Joystick> getjoy_lift();
	std::shared_ptr<frc::Joystick> getjoy_con_belt_left();
	std::shared_ptr<frc::Joystick> getJoystick1();
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES
};

#endif
